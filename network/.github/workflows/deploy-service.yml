name: Deploy Network Service

on:
  push:
    branches: [main, develop]
    paths:
      - "network/**"
  workflow_dispatch:
    inputs:
      service:
        description: "Service to deploy (caddy, pihole, uptime-kuma, or all)"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - caddy
          - pihole
          - uptime-kuma
      action:
        description: "Action to perform"
        required: true
        default: "update"
        type: choice
        options:
          - deploy
          - update
          - restart

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy environment file
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > network/.env

      - name: Deploy service
        run: |
          cd network/scripts
          chmod +x *.sh
          if [ "${{ github.event.inputs.service }}" = "all" ]; then
            ./manage-all.sh ${{ github.event.inputs.action }}
          else
            ./manage-${{ github.event.inputs.service }}.sh ${{ github.event.inputs.action }}
          fi
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}

      - name: Verify deployment
        run: |
          cd network/scripts
          if [ "${{ github.event.inputs.service }}" = "all" ]; then
            ./manage-all.sh status
          else
            ./manage-${{ github.event.inputs.service }}.sh status
          fi
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
